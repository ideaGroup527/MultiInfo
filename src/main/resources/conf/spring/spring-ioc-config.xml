<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
      http://www.springframework.org/schema/tx
	  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	  
     <context:component-scan base-package="org.jmu.multiinfo.module"/> 
      <context:component-scan base-package="org.jmu.multiinfo.common"/> 
    <!-- 读取mysql jdbc的配置-->
    <context:property-placeholder location="classpath:conf/jdbc.properties" />
    <!-- 配置数据源，从上面配置文件读取-->
    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${database.driverClassName}"/>
        <property name="jdbcUrl" value="${database.url}"/>
        <property name="user" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
        <property name="initialPoolSize" value="${pool.initialPoolSize}"/>
        <property name="minPoolSize" value="${pool.minPoolSize}"/>
        <property name="maxPoolSize" value="${pool.maxPoolSize}"/>
        <property name="maxIdleTime" value="${pool.maxIdleTime}"/>
        <property name="acquireIncrement" value="${pool.acquireIncrement}"/>
    </bean>
    
   <!-- 使用JDBC事务 -->  
    <bean id="txManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
 
<!--  注解事务 -->
<!--  <tx:annotation-driven  
    transaction-manager="txManager" />   -->
 
 <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
 <property name="dataSource" ref="dataSource" />  
 </bean>

	<bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean id="simpleJdbcInsert" class="org.springframework.jdbc.core.simple.SimpleJdbcInsert">
		<constructor-arg ref="dataSource" />
	</bean>
	
    <!-- 配置事务异常封装-->
    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
 
<!--     声明式容器事务管理-->
	<tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
           <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
               <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
             <tx:method name="*" read-only="true" />
           <!--  <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="merge*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="put*" propagation="REQUIRED" />
            hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" read-only="true" /> -->
        </tx:attributes>
    </tx:advice> 
<!--     <aop:config expose-proxy="true">
      只对业务逻辑层实施事务
        <aop:pointcut id="txPointcut" expression="execution(* com.zxrc.ibatisTest.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config> -->
    
</beans>